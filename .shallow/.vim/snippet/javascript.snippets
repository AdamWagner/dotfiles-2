################################################################################
# Generic

snippet us "strict mode" b
'use strict';$0
endsnippet

snippet cl "console.log()" b
console.log(${1:'$2'});$0
endsnippet


################################################################################
# CommonJS

snippet me "module.exports" b
module.exports = ${1:export}$0
endsnippet

snippet req "require()" b
var ${1:module} = require('${2:${1/([a-z]+)([A-Z])?/$1(?2:-\l$2)/g}}');$0
endsnippet


################################################################################
# Testing

snippet be "beforeEach()" b
beforeEach(function() {$0
});
endsnippet

snippet ae "afterEach()" b
afterEach(function() {$0
});
endsnippet

snippet des "describe()" b
describe('${1:what is being tested}', function() {$0
});
endsnippet

snippet it "it()" b
it('should ${1:do this...}', function(${2:done}) {$0
});
endsnippet


################################################################################
# JSDoc

snippet j "JSDoc bloc" b
/**
 * ${0:What/Why}
 */
endsnippet

snippet ja "JSDoc @augments:"
@augments ${1:Class}
endsnippet

snippet jc "JSDoc @const"
@const {${1:type}}
endsnippet

snippet jt "JSDoc @type"
@type {${1:type}}
endsnippet

snippet jth "JSDoc @throws"
@throws {${1:ExceptionName}}${2:, ${3:Description}}$0
endsnippet

snippet jp "JSDoc @param"
@param {${1:Type}} ${2:name}${3: - ${4:Description}}$0
endsnippet

snippet jr "JSDoc @return"
@return {${1:Type}}${2: - ${3:Description}}$0
endsnippet
