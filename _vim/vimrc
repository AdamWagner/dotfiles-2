" don't care about vi compability (at the top to avoid bad surprise)
set nocompatible

" store useful path
let s:vim_conf = expand('<sfile>:p')
let s:vim_dir = fnamemodify(s:vim_conf, ':h') . '/.vim'

" Load plugins using pathogen
runtime pathogen/autoload/pathogen.vim
execute pathogen#infect(s:vim_dir . '/bundle/themes/{}', s:vim_dir . '/bundle/languages/{}', s:vim_dir . '/bundle/tools/{}')
execute pathogen#helptags()

" File type / syntax detection
syntax on
filetype on
filetype plugin on
filetype indent on

" Theme
set t_Co=256            " enable 256 colors
colorscheme ir_black    " theme

" 80 characters line convention
highlight OverLength ctermbg=red ctermfg=white
match OverLength /\%81v.\+/

" Various options
set shell=zsh           " set shell for :sh
set expandtab           " insert `shiftwidth` spaces when using <Tab>
set shiftwidth=2        " n spaces when using <Tab>
set softtabstop=2       " n spaces when using <Tab>
set ignorecase          " ignore case when searching
set smartcase           "   `-> except if there is one uppercase character
set wildmenu            " better command line completion menu
set wildmode=list:longest,full " `-> better
set wildignore+=*.o,*.pyc,*.sw*,*~ " ignore those files in completion
set showcmd             " show (partial) command in the last line of the screen
set showmatch           " show the matching bracket when inserting
set matchtime=3         " tenths of second to show the matching bracket
set scrolloff=5         " keep at least 5 lines after the cusor when scrolling
set cpoptions=ces$      " make the 'cw' and like commands put a $ at the end
set wrap                " split the line if it is too long
set autoread            " watch for file changes by other programs
set incsearch           " show matches as soon as posseble
set hlsearch            " highlight last search matches
set laststatus=2        " set the status line always on
set timeoutlen=500      " time to wait when a part of a maped sequence is typped
set wrapscan            " searches wrap around the end of the file
set number              " show line number
set ruler               " show line number
set autoindent          " auto-indentation (most of time override by plugins)
set shortmess+=I        " disable vim welcome message
set encoding=utf-8      " ensure proper encoding
set foldmethod=manual   " ensure that foldmethod is manual
set nohidden            " when I close a tab, remove the buffer
set nowritebackup       " no more temporary files
set backspace=2         " Fix backspace (on some OS/term)

" Instant escape
if ! has('gui_running')
  set ttimeoutlen=10
  augroup FastEscape
    autocmd!
    au InsertEnter * set timeoutlen=0
    au InsertLeave * set timeoutlen=1000
  augroup END
endif

" Binds
" - set leading key
let mapleader = ','
" - create/move/close tabs
cabbrev tn tabnew
cabbrev tm tabmove
cabbrev tq tabclose
" - change/close in tabs
nnoremap <silent> <S-h> gT
nnoremap <silent> <S-l> gt
" - up and down are more logical with g
nnoremap <silent> j gj
nnoremap <silent> k gk
" - center on each search result
noremap <silent> n nzz
noremap <silent> N Nzz

" Plugins configuration
"  - narrowregion
noremap <silent> <leader>r :NarrowRegion<CR>
noremap <silent> <leader>w :NarrowWindow<CR>
"  - nerdcommenter
map <silent> <leader>/ <leader>c<space>
"  - nerdtree
nnoremap <silent> <leader>t :NERDTreeToggle<CR>
"  - powerline
let &runtimepath .= ',' . s:vim_dir . '/bundle/tools/powerline/powerline/bindings/vim'
set noshowmode          "hide the duplicate mode in bottom status bar
