" clear all autocommands!
autocmd!
" Automatically cd into the directory that the file is in
autocmd BufEnter * execute "chdir ".escape(expand("%:p:h"), ' ')

" Meta options
set nocompatible                " break away from old vi compatibility
set fileformats=unix,dos,mac    " support all three newline formats
set viminfo=                    " don't use or save viminfo files

" Load plugins using pathogen
let s:vim_conf = expand('<sfile>:p')
let s:vim_dir = fnamemodify(s:vim_conf, ':h') . '/.vim'
runtime pathogen/autoload/pathogen.vim
execute pathogen#infect(s:vim_dir . '/bundle/themes/{}', s:vim_dir . '/bundle/languages/{}', s:vim_dir . '/bundle/tools/{}')
execute pathogen#helptags()

" File type / syntax detection
syntax on
filetype on
filetype plugin on
filetype indent on

" Theme
set t_Co=256            " enable 256 colors
colorscheme ir_black    " theme

" 80 characters line convention
highlight OverLength ctermbg=red ctermfg=white
match OverLength /\%81v.\+/

" Various options
set shell=zsh           " shell for :sh
set autoread            " watch for file changes by other programs
set laststatus=2        " status line always on
set encoding=utf-8      " ensure proper encoding
set ttyfast             " we have a fast terminal
set tags=tags;/         " search parent directories for ctags file
set nobackup            " no backup files
set nowritebackup       " no backup file while editing
set noswapfile          " no swap files

" Console UI
set timeoutlen=150      " time to wait when a part of a maped sequence is typped
set matchtime=3         " tenths of second to show the matching bracket
set nonumber            " don't show line number
set cmdheight=1         " explicitly set the command line height
set showcmd             " show (partial) command in the last line of the screen
set scrolloff=8         " keep at least 5 lines after the cusor when scrolling
set sidescrolloff=10     " (same as above for side scrolling)
set lazyredraw          " only redraw when needed
set nolist              " hide invisible characters
set wrap                " split the line if it is too long
set shortmess=atI       " disable vim welcome message and shorter messages
set wildmenu            " better command line completion menu
set wildmode=list:longest,full " `-> better
set wildignore+=*.o,*.pyc,*.sw*,*.zip " ignore those files in completion
set wildignore+=*/tmp/*,*.so,*~ " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.exe " Windows

" Text editing && Search behavior
set backspace=2         " fix backspace (on some OS/term)
set cpoptions=ces$      " make the 'cw' and like commands put a $ at the end
set ignorecase          " ignore case when searching
set smartcase           "  `-> except if there is one uppercase character
set incsearch           " show matches as soon as posseble
set nohlsearch          " don't highlight last search matches
set wrapscan            " searches wrap around the end of the file
set diffopt=filler,iwhite " ignore all whitespace and sync
set showmatch           " show the matching bracket when inserting
set completeopt=menu,longest,preview " more autocomplete <Ctrl>-P options
set nostartofline       " leave my cursor position alone!
set foldmethod=manual   " ensure that foldmethod is manual

" Indent and tabs
set autoindent          " auto-indentation (most of time override by plugins)
set expandtab           " insert `shiftwidth` spaces when using <Tab>
set shiftwidth=2        " n spaces when using <Tab>
set softtabstop=2       " n spaces when using <Tab>
set hidden              " when I close a tab, don't remove the buffer

" Turn off error bells
set noerrorbells
set visualbell
set t_vb=

" Instant escape
if ! has('gui_running')
  set ttimeoutlen=10
  augroup Fastescape
    autocmd!
    au InsertEnter * set timeoutlen=0
    au InsertLeave * set timeoutlen=150
  augroup END
endif

" Binds
"  - set leading key
let mapleader = ','
"  - change tabs
nnoremap <silent> <S-h> gT
nnoremap <silent> <S-l> gt
"  - up and down are more logical with g
nnoremap <silent> j gj
nnoremap <silent> k gk
"  - center on each search result
nnoremap <silent> n nzz
nnoremap <silent> <S-n> Nzz

" Abbrev
"  - create/move/close tabs
cabbrev tn tabnew
cabbrev tm tabmove
cabbrev tq tabclose
"  - close buffers
cabbrev bq bdelete

" Plugins configuration
"  - a.vim
nnoremap <silent> <leader>a :A<CR>
"  - buffergattor
let g:buffergator_suppress_keymaps = 1
nnoremap <silent> <leader>b :BuffergatorToggle<CR>
"  - CtrlP
nnoremap <silent> <leader>o :CtrlP<CR>
"  - easymotion
let g:EasyMotion_leader_key = '<Leader>m'
nmap <silent> <leader>w <leader>mw
"  - narrowregion
noremap <silent> <leader>r :NarrowRegion<CR>
"  - nerdcommenter
map <silent> <leader><leader> <leader>c<space>
"  - nerdtree
nnoremap <silent> <leader>e :NERDTreeToggle<CR>
"  - powerline
let &runtimepath .= ',' . s:vim_dir . '/bundle/tools/powerline/powerline/bindings/vim'
set noshowmode "hide the duplicate mode in bottom status bar
"  - tagbar
nnoremap <silent> <leader>t :TagbarToggle<CR>
