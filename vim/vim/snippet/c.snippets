# Define

snippet def "#define" !b
#define ${1:SYMBOL} ${2}
endsnippet

snippet defi "#define only #ifndef" !b
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#	define ${1:SYMBOL} ${2}
#endif
endsnippet

snippet gua "Guard: include header only once" !b
#ifndef ${1:`!p
if not snip.c:
    import random, string
    name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
    rand = ''.join(random.sample(string.ascii_letters+string.digits, 8))
    snip.rv = ('%s_%s' % (name,rand)).upper()
else:
    snip.rv = snip.c`}
#define $1

${0}

#endif /* !$1 */
endsnippet

# Include

snippet inc "#include local header" !b
#include "${1:`!p snip.rv = snip.basename + '.h'`}"
endsnippet

snippet sinc "#include system heade" !b
#include <${1:.h}>
endsnippet

# Control flow

snippet if "if" !b
if (${1:CONDITION})
{
	${2:// code...}
}
$0
endsnippet

snippet sif "short if" !b
if (${1:CONDITION})
	${2:// code...}
$0
endsnippet

snippet elif "else if" !b
else if (${1:CONDITION})
{
	${2:// code...}
}
$0
endsnippet

snippet selif "short else if" !b
else if (${1:CONDITION})
	${2:// code...}
$0
endsnippet

snippet else "else" !b
else
{
	${0:// code...}
}
endsnippet

snippet selse "short else" !b
else
	${0:// code...}
endsnippet

snippet while "while loop" !b
while (${1:CONDITION})
{
	${0:// code...}
}
endsnippet

snippet for "for loop" !b
for (${1:i} = 0; $1 < ${2:COUNT}; $1${3:++})
{
	${0:// code...}
}
endsnippet

# Various

snippet main "main" !b
int main(int argc, char **argv)
{
	${VISUAL}${0:${VISUAL/(.*)/(?1::\/* code *\/)/}}
	return 0;
}
endsnippet
